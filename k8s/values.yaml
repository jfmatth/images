# Default values for k8s.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/jfmatth/images
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: true
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: clusterissuer
    traefik.ingress.kubernetes.io/router.middlewares: cert-manager-redirect@kubernetescrd
  hosts:
    - host: images.3756home.org
      paths:
        - path: /
          pathType: ImplementationSpecific
  
  tls: 
    - secretName: images-https
      hosts:
        - images.3756home.org

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health/
    port: http
readinessProbe:
  httpGet:
    path: /health/
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
pvc:
  name: images
  size: 20Gi

volumes:
- name: images
  persistentVolumeClaim:
    claimName: images

volumeMounts:
- name: images
  mountPath: "/app/mediafiles"

nodeSelector: {}

tolerations: []

affinity: {}


# --------------------------

postgresql:
  database: images
  replicas: 1
  size: "2Gi"
  user: django
  secret: django.images